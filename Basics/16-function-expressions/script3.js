// Function Expression в сравнении с Function Declaration


// Во-первых, синтаксис: как определить, что есть что в коде.

// Function Declaration: функция объявляется отдельной конструкцией 
// «function…» в основном потоке кода.

// Function Declaration
// function sum(a, b) {
//     return a + b;
//   }

//   Function Expression: функция, созданная внутри другого выражения 
//   или синтаксической конструкции. В данном случае функция 
//   создаётся в правой части «выражения присваивания» =:

// Function Expression
// let sum = function(a, b) {
//     return a + b;
//   };

// Function Expression создаётся, когда выполнение доходит до него, 
// и затем уже может использоваться.


// После того, как поток выполнения достигнет правой части выражения 
// присваивания let sum = function… – с этого момента, функция 
// считается созданной и может быть использована (присвоена переменной, вызвана и т.д. ).


sayHi("Вася"); // Привет, Вася

function sayHi(name) {
  alert( `Привет, ${name}` );
}