// Преобразование типов

// Какой результат будет у выражений ниже?

// "" + 1 + 0 = "10" // (1)
// "" - 1 + 0 = -1 // (2)
// true + false = 1
// 6 / "3" = 2
// "2" * "3" = 6
// 4 + 5 + "px" = "9px"
// "$" + 4 + 5 = "$45"
// "4" - 2 = 2
// "4px" - 2 = NaN
// 7 / 0 = Infinity
// "  -9  " + 5 = "  -9  5" // (3)
// "  -9  " - 5 = -14 // (4)
// null + 1 = 1 // (5)
// undefined + 1 = NaN // (6)
// " \t \n" - 2 = -2 // (7)


a = "" + 1 + 0 // "10"
// alert(a);

b = "" - 1 + 0 // -1
// alert(b);
// Вычитание - (как и большинство математических операторов) 
// работает только с числами, пустая строка "" приводится к 0

c = true + false //1 (1+0=1)
// alert(c);

d = 6 / "3" // 2 (строка преобразуется в число)
e = "2" * "3" // 6 (строка преобразуется в число)

f = 4 + 5 + "px" // "9px"
// alert(f);
//Сложение со строкой превращает число 5 в строку и добавляет к строке
//! счет идет слева направо

f = "$" + 4 + 5 // "$45"
// alert(f);

"4" - 2 //2 (вычитание всегда преобразует к числу)
"4px" - 2 // NaN

f = 7 / 0 // Infinity
// alert(f);

"  -9  " + 5 // "  -9  5" 

// Сложение со строкой превращает число 5 в строку и добавляет к строке.

f = "  -9  " - 5 // -14
// Вычитание всегда преобразует к числу, 
// значит строка " -9 " становится числом -9 (пробелы по краям обрезаются).

// alert(f);

f = null + 1 // 1 
// null становится 0 после численного преобразования.

// alert(f);

f = undefined + 1 // NaN 
// undefined становится NaN после численного преобразования.
// alert(f);

f = " \t \n" - 2 // -2 

// Пробельные символы, такие как \t и \n, 
// по краям строки игнорируются при преобразовании в число, 
// так что строка " \t \n", аналогично пустой строке, становится 0 
// после численного преобразования.


alert(f);








