// let x = 1;

// x = -x;
// alert( x ); // -1, применили унарный минус


//----------------------

// let x = 1, 
//     y = 3;

// alert( y - x ); // 2, бинарный минус вычитает значения

//--------------------

// Результат a % b – это остаток от целочисленного деления a на b.


// alert( 5 % 2 ); // 1, остаток от деления 5 на 2
// alert( 8 % 3 ); // 2, остаток от деления 8 на 3

//Возведение в степень **

// alert( 2 ** 2 ); // 4  (2 умножено на себя 2 раза)
// alert( 2 ** 3 ); // 8  (2 * 2 * 2, 3 раза)
// alert( 2 ** 4 ); // 16 (2 * 2 * 2 * 2, 4 раза)

// alert( 2 ** 3 );

// alert( 4 ** (1/2) ); // 2 (степень 1/2 эквивалентна взятию квадратного корня)
// alert( 8 ** (1/3) ); // 2 (степень 1/3 эквивалентна взятию кубического корня)


//Сложение строк при помощи бинарного +


// let s = "кот" + "о" + "пес";
// alert(s); // котопес

// alert( '1' + 2 ); // "12"
// alert( 2 + '1' ); // "21"

// alert(2 + 2 + '1' ); // будет "41", а не "221"


// alert( 6 - '2' ); // 4, '2' приводится к числу
// alert( '6' / '2' ); // 3, оба операнда приводятся к числам


//Приведение к числу, унарный +

// Не влияет на числа
// let x = 1;
// alert( +x ); // 1

// let y = -2;
// alert( +y ); // -2

// // Преобразует не числа в числа
// alert( +true ); // 1
// alert( +"" );   // 0

// let apples = "2";
// let oranges = "3";

// alert( apples + oranges ); // "23", так как бинарный плюс объединяет строки

// let apples = "2";
// let oranges = "3";

// // оба операнда предварительно преобразованы в числа
// alert( +apples + +oranges ); // 5

// // более длинный вариант
// // alert( Number(apples) + Number(oranges) ); // 5



//сначала выполнится АРИФМЕТИКА а потом РАВНО!

// let x = 2 * 2 + 1;

// alert( x ); // 5


// let a = 1;
// let b = 2;

// let c = 3 - (a = b + 1);

// alert( a ); // 3
// alert( c ); // 0



//Присваивание по цепочке


// let a, b, c;

// a = b = c = 2 + 2;

// alert( a ); // 4
// alert( b ); // 4
// alert( c ); // 4

























